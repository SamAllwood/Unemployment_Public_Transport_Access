weight = 4,
color = "#03F",
group = "Towns") %>%
addLegend("topright",
pal = PTJA_D_pal,
values = ~PT_Job_Access_Index_Demand,
title = "PTJA-D",
opacity = 1,
group = "PTJA-D") %>%
addLegend("topright",
pal = PTJA_pal,
values = ~PT_Job_Access_Index,
title = "PTJA",
opacity = 1,
group = "PTJA") %>%
addPolygons(data = towns_within_LCR,
color = "black",
weight = 2,
fill = FALSE) %>%
addLayersControl("Layers",
position = "topleft",
baseGroups = c("PTJA", "PTJA-D"),
options = layersControlOptions(collapsed = FALSE)) %>%
addScaleBar((position = "bottomleft"))
)
# Town centres
towns_centres_LCR <- st_read("../../Data/towns_centres_LCR.shp") %>%
filter(buffer == "N") %>%
as_Spatial()
PTJA_pal <- colorNumeric(palette = "Spectral",
domain = GMCA_dataset_interactive@data$PT_Job_Access_Index,
n=5,
reverse = TRUE)
PTJA_D_pal <- colorNumeric(palette = "Spectral",
domain = GMCA_dataset_interactive@data$PT_Job_Access_Index_Demand,
n=5,
reverse = TRUE)
# Interactive Map
(map <- LCR_dataset_interactive %>%
leaflet() %>%
addProviderTiles("OpenStreetMap") %>%
#  setView(lat = 53.407438, lng = -2.981652, zoom = 10) %>%
addPolygons(data = LCR_boundary,
color = "red",
weight = 1,
fill = FALSE) %>%
addPolygons(data = LCR_dataset_interactive,
color = ~PTJA_D_pal(PT_Job_Access_Index_Demand),
fillOpacity = .8,
weight = 1,
group = "PTJA-D",
label = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>"
),  htmltools::HTML),
highlight = highlightOptions(weight =3, color ="red",
bringToFront =TRUE),
popup = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>",
#                "<strong>Population: </strong>", Population, "<br>",
"<strong>Jobs: </strong>", Jobs, "<br>",
"<strong>LSOA Area: </strong>", LSOA_Area, "<br>",
"<strong>Time to nearest town centre: </strong>", Traveltime_empcent, "<br>",
"<strong>PT Job Access Index Demand: </strong>", PT_Job_Access_Index_Demand ),
htmltools::HTML)) %>%
addPolygons(data = GMCA_dataset_interactive,
color = ~PTJA_D_pal(PT_Job_Access_Index_Demand),
fillOpacity = .8,
weight = 1,
group = "PTJA-D",
label = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>"
),  htmltools::HTML),
highlight = highlightOptions(weight =3, color ="red",
bringToFront =TRUE),
popup = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>",
#                "<strong>Population: </strong>", Population, "<br>",
"<strong>Jobs: </strong>", Jobs, "<br>",
"<strong>LSOA Area: </strong>", LSOA_Area, "<br>",
"<strong>Time to nearest town centre: </strong>", Traveltime_empcent, "<br>",
"<strong>PT Job Access Index Demand: </strong>", PT_Job_Access_Index_Demand ),
htmltools::HTML)) %>%
addPolygons(data = LCR_dataset_interactive,
color = ~PTJA_pal(PT_Job_Access_Index),
fillOpacity = .8,
weight = 1,
group = "PTJA",
label = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>"
),  htmltools::HTML),
highlight = highlightOptions(weight =3, color ="red",
bringToFront =TRUE),
popup = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>",
#                "<strong>Population: </strong>", Population, "<br>",
"<strong>Jobs: </strong>", Jobs, "<br>",
"<strong>LSOA Area: </strong>", LSOA_Area, "<br>",
"<strong>Time to nearest town centre: </strong>", Traveltime_empcent, "<br>",
"<strong>PT Job Access Index: </strong>", PT_Job_Access_Index ),
htmltools::HTML)) %>%
addCircleMarkers(data = towns_centres_LCR,
popup = ~id,
radius = 1,
opacity = 1,
stroke = TRUE,
weight = 4,
color = "#03F",
group = "Towns") %>%
addLegend("topright",
pal = PTJA_D_pal,
values = ~PT_Job_Access_Index_Demand,
title = "PTJA-D",
opacity = 1,
group = "PTJA-D") %>%
addLegend("topright",
pal = PTJA_pal,
values = ~PT_Job_Access_Index,
title = "PTJA",
opacity = 1,
group = "PTJA") %>%
addPolygons(data = towns_within_LCR,
color = "black",
weight = 2,
fill = FALSE) %>%
addLayersControl("Layers",
position = "topleft",
baseGroups = c("PTJA", "PTJA-D"),
options = layersControlOptions(collapsed = FALSE)) %>%
addScaleBar((position = "bottomleft"))
)
## Read GMCA datasets
# Load Manchester Geo data from file
GMCA_dataset_interactive <- read_sf("../../Data/MANCH_dataset.shp") %>%
rename("LSOA_Code" = "LSOA21C",
"LSOA_Name" = "LSOA21N",
"TravelTime_Jobcentre" = "Tr__J_C",
"PT_Job_Access_Index" = "PT_Jb_A_I",
"PT_Job_Access_Index_bus" = "PT_J_A_I_B",
"PT_Job_Access_Index_tram" = "PT_J_A_I_T",
"PT_Job_Access_Index_walk" = "PT_J_A_I_W",
"Jobs" = "Employd",
"LSOA_Area" = "LSOA__2",
"Traveltime_empcent" = "Tr__E_C",
"PT_Job_Access_Index_Demand" = "PT_Jb_A_I_") %>%
st_transform(4326) %>%
mutate(PT_Job_Access_Index_bus = PT_Job_Access_Index_bus - PT_Job_Access_Index_walk,
PT_Job_Access_Index_tram = PT_Job_Access_Index_tram - PT_Job_Access_Index_walk) %>%
as("Spatial")
# Interactive Map
(map <- LCR_dataset_interactive %>%
leaflet() %>%
addProviderTiles("OpenStreetMap") %>%
#  setView(lat = 53.407438, lng = -2.981652, zoom = 10) %>%
addPolygons(data = LCR_boundary,
color = "red",
weight = 1,
fill = FALSE) %>%
addPolygons(data = LCR_dataset_interactive,
color = ~PTJA_D_pal(PT_Job_Access_Index_Demand),
fillOpacity = .8,
weight = 1,
group = "PTJA-D",
label = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>"
),  htmltools::HTML),
highlight = highlightOptions(weight =3, color ="red",
bringToFront =TRUE),
popup = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>",
#                "<strong>Population: </strong>", Population, "<br>",
"<strong>Jobs: </strong>", Jobs, "<br>",
"<strong>LSOA Area: </strong>", LSOA_Area, "<br>",
"<strong>Time to nearest town centre: </strong>", Traveltime_empcent, "<br>",
"<strong>PT Job Access Index Demand: </strong>", PT_Job_Access_Index_Demand ),
htmltools::HTML)) %>%
addPolygons(data = GMCA_dataset_interactive,
color = ~PTJA_D_pal(PT_Job_Access_Index_Demand),
fillOpacity = .8,
weight = 1,
group = "PTJA-D",
label = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>"
),  htmltools::HTML),
highlight = highlightOptions(weight =3, color ="red",
bringToFront =TRUE),
popup = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>",
#                "<strong>Population: </strong>", Population, "<br>",
"<strong>Jobs: </strong>", Jobs, "<br>",
"<strong>LSOA Area: </strong>", LSOA_Area, "<br>",
"<strong>Time to nearest town centre: </strong>", Traveltime_empcent, "<br>",
"<strong>PT Job Access Index Demand: </strong>", PT_Job_Access_Index_Demand ),
htmltools::HTML)) %>%
addPolygons(data = LCR_dataset_interactive,
color = ~PTJA_pal(PT_Job_Access_Index),
fillOpacity = .8,
weight = 1,
group = "PTJA",
label = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>"
),  htmltools::HTML),
highlight = highlightOptions(weight =3, color ="red",
bringToFront =TRUE),
popup = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>",
#                "<strong>Population: </strong>", Population, "<br>",
"<strong>Jobs: </strong>", Jobs, "<br>",
"<strong>LSOA Area: </strong>", LSOA_Area, "<br>",
"<strong>Time to nearest town centre: </strong>", Traveltime_empcent, "<br>",
"<strong>PT Job Access Index: </strong>", PT_Job_Access_Index ),
htmltools::HTML)) %>%
addCircleMarkers(data = towns_centres_LCR,
popup = ~id,
radius = 1,
opacity = 1,
stroke = TRUE,
weight = 4,
color = "#03F",
group = "Towns") %>%
addLegend("topright",
pal = PTJA_D_pal,
values = ~PT_Job_Access_Index_Demand,
title = "PTJA-D",
opacity = 1,
group = "PTJA-D") %>%
addLegend("topright",
pal = PTJA_pal,
values = ~PT_Job_Access_Index,
title = "PTJA",
opacity = 1,
group = "PTJA") %>%
addPolygons(data = towns_within_LCR,
color = "black",
weight = 2,
fill = FALSE) %>%
addLayersControl("Layers",
position = "topleft",
baseGroups = c("PTJA", "PTJA-D"),
options = layersControlOptions(collapsed = FALSE)) %>%
addScaleBar((position = "bottomleft"))
)
# Interactive Map
(map <- LCR_dataset_interactive %>%
leaflet() %>%
addProviderTiles("OpenStreetMap") %>%
#  setView(lat = 53.407438, lng = -2.981652, zoom = 10) %>%
addPolygons(data = LCR_boundary,
color = "red",
weight = 1,
fill = FALSE) %>%
addPolygons(data = LCR_dataset_interactive,
color = ~PTJA_D_pal(PT_Job_Access_Index_Demand),
fillOpacity = .8,
weight = 1,
group = "PTJA-D",
label = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>"
),  htmltools::HTML),
highlight = highlightOptions(weight =3, color ="red",
bringToFront =TRUE),
popup = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>",
#                "<strong>Population: </strong>", Population, "<br>",
"<strong>Jobs: </strong>", Jobs, "<br>",
"<strong>LSOA Area: </strong>", LSOA_Area, "<br>",
"<strong>Time to nearest town centre: </strong>", Traveltime_empcent, "<br>",
"<strong>PT Job Access Index Demand: </strong>", PT_Job_Access_Index_Demand ),
htmltools::HTML)) %>%
addPolygons(data = GMCA_dataset_interactive,
color = ~PTJA_D_pal(PT_Job_Access_Index_Demand),
fillOpacity = .8,
weight = 1,
group = "PTJA-D",
label = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>"
),  htmltools::HTML),
highlight = highlightOptions(weight =3, color ="red",
bringToFront =TRUE),
popup = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>",
#                "<strong>Population: </strong>", Population, "<br>",
"<strong>Jobs: </strong>", Jobs, "<br>",
"<strong>LSOA Area: </strong>", LSOA_Area, "<br>",
"<strong>Time to nearest town centre: </strong>", Traveltime_empcent, "<br>",
"<strong>PT Job Access Index Demand: </strong>", PT_Job_Access_Index_Demand ),
htmltools::HTML)) %>%
addPolygons(data = LCR_dataset_interactive,
color = ~PTJA_pal(PT_Job_Access_Index),
fillOpacity = .8,
weight = 1,
group = "PTJA",
label = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>"
),  htmltools::HTML),
highlight = highlightOptions(weight =3, color ="red",
bringToFront =TRUE),
popup = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>",
#                "<strong>Population: </strong>", Population, "<br>",
"<strong>Jobs: </strong>", Jobs, "<br>",
"<strong>LSOA Area: </strong>", LSOA_Area, "<br>",
"<strong>Time to nearest town centre: </strong>", Traveltime_empcent, "<br>",
"<strong>PT Job Access Index: </strong>", PT_Job_Access_Index ),
htmltools::HTML)) %>%
addPolygons(data = GMCA_dataset_interactive,
color = ~PTJA_pal(PT_Job_Access_Index),
fillOpacity = .8,
weight = 1,
group = "PTJA",
label = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>"
),  htmltools::HTML),
highlight = highlightOptions(weight =3, color ="red",
bringToFront =TRUE),
popup = ~lapply(paste0(
"<strong>LSOA Code: </strong>", as.character(LSOA_Code), "<br>",
"<strong>LSOA Name: </strong>", LSOA_Name, "<br>",
#                "<strong>Population: </strong>", Population, "<br>",
"<strong>Jobs: </strong>", Jobs, "<br>",
"<strong>LSOA Area: </strong>", LSOA_Area, "<br>",
"<strong>Time to nearest town centre: </strong>", Traveltime_empcent, "<br>",
"<strong>PT Job Access Index: </strong>", PT_Job_Access_Index ),
htmltools::HTML)) %>%
addCircleMarkers(data = towns_centres_LCR,
popup = ~id,
radius = 1,
opacity = 1,
stroke = TRUE,
weight = 4,
color = "#03F",
group = "Towns") %>%
addLegend("topright",
pal = PTJA_D_pal,
values = ~PT_Job_Access_Index_Demand,
title = "PTJA-D",
opacity = 1,
group = "PTJA-D") %>%
addLegend("topright",
pal = PTJA_pal,
values = ~PT_Job_Access_Index,
title = "PTJA",
opacity = 1,
group = "PTJA") %>%
addPolygons(data = towns_within_LCR,
color = "black",
weight = 2,
fill = FALSE) %>%
addLayersControl("Layers",
position = "topleft",
baseGroups = c("PTJA", "PTJA-D"),
options = layersControlOptions(collapsed = FALSE)) %>%
addScaleBar((position = "bottomleft"))
)
?addPolygons
# Script to create the travel time matrix for West Yorkshire Combined Authority (WYCA) using the R5r package
# 1. Setup ----------------------------------------------------------------
library(tidyverse)
library(knitr)
library(tidytransit)
library(sf)
library(r5r)
library(osmextract)
library(mapview)
library(ggmap)
library(accessibility)
library(lwgeom)
library(patchwork)
options(java.parameters = "-Xmx8G")
options(timeout = 1000)
options(scipen=999)
# 2. Load and Filter Datasets ------------------------------------------------------------
setwd("~/Library/CloudStorage/GoogleDrive-sam.allwood3@gmail.com/My Drive/Consulting/Unemployment_Public_Transport_Access/WYCA")
# WYCA Boundary + buffer
Boundaries <- read_sf("../../Data/CAUTH_DEC_2023_EN_BFC.shp")
WYCA_boundary <- Boundaries %>% filter(CAUTH23NM == "West Yorkshire") %>%
st_transform(4326)
WYCA_boundary
WYCA_bound_small_buffer <- WYCA_boundary %>% st_buffer(dist=25)
# Create a 20km buffer around the WYCA boundary line
buffered_WYCA_boundary <- st_buffer(WYCA_boundary, dist = 20000) %>%
st_transform(4326)
# Read Local Authority District (LAD) boundaries
LADs <- read_sf("../../Data/LAD_DEC_2021_GB_BFC.shp") %>%
st_transform(4326)
# Filter LADs within WYCA
LADs_WYCA <- LADs %>% filter(as.vector(st_within(., WYCA_bound_small_buffer, sparse = FALSE))) %>%
st_transform(4326)
# Read LSOA pop-weighted centroids
lsoas <- st_read("../../Data/LSOA_PopCentroids_EW_2021_V3.shp") %>%
st_transform(4326)
# Filter LSOA PW-centroids
lsoas <- st_make_valid(lsoas)
lsoa_PWC_within_WYCA <- lsoas %>%
filter(as.vector(st_within(., WYCA_boundary, sparse = FALSE))) %>%
st_transform(4326) %>% rename(id = LSOA21CD)
lsoa_PWC_within_WYCA_buffer <- lsoas %>%
filter(as.vector(st_within(., buffered_WYCA_boundary, sparse = FALSE))) %>%
st_transform(4326) %>% rename(id = LSOA21CD)
# transform CRS to WGS84
lsoa_PWC_within_WYCA_buffer$geometry <- st_transform(lsoa_PWC_within_WYCA_buffer$geometry, 4326)
lsoa_PWC_within_WYCA$geometry <- st_transform(lsoa_PWC_within_WYCA$geometry, 4326)
#Read LSOA boundaries
lsoa_boundaries <- st_read("../../Data/LSOA_2021_EW_BFC_V8.shp") %>%
st_transform(4326)
lsoa_boundaries$geometry <- st_make_valid(lsoa_boundaries$geometry)
# Filter LSOA boundaries for WYCA buffer
#lsoa_boundaries <- st_make_valid(lsoa_boundaries)
lsoa_boundaries_within_WYCA_buffer <- lsoa_boundaries[st_within(lsoa_boundaries,
buffered_WYCA_boundary,
sparse = FALSE), ]
lsoa_boundaries_within_WYCA <- lsoa_boundaries[st_within(lsoa_boundaries,
WYCA_bound_small_buffer,
sparse = FALSE), ]
lsoa_boundaries_within_WYCA_buffer$LSOA_area <- st_area(lsoa_boundaries_within_WYCA_buffer$geometry)
lsoa_boundaries_within_WYCA_buffer$LSOA_area_km2 <- lsoa_boundaries_within_WYCA_buffer$LSOA_area/1000000
lsoa_boundaries_within_WYCA$LSOA_area <- st_area(lsoa_boundaries_within_WYCA$geometry)
lsoa_boundaries_within_WYCA$LSOA_area_km2 <- lsoa_boundaries_within_WYCA$LSOA_area/1000000
# Read Towns and City boundaries
towns <- st_read("../../Data/TCITY_2015_EW_BGG_V2.shp") %>%
st_transform(4326)
towns$geometry <- st_make_valid(towns$geometry)
towns_within_WYCA_buffer <- towns[st_within(towns, buffered_WYCA_boundary, sparse = FALSE), ]
towns_within_WYCA_buffer
lsoa_boundaries_within_WYCA
towns_within_WYCA <- towns[st_within(towns, WYCA_bound_small_buffer, sparse = FALSE), ]
towns_within_WYCA
towns_within_WYCA_buffer
towns_within_WYCA
towns_manual_WYCA <- data.frame(
id = c("Barnsley", "Bradford", "Burnley", "Bury", "Doncaster", "Halifax", "Harrogate", "Huddersfield", "Leeds", "Oldham"),
lon = c(-1.479237, -1.756356, -2.245021, -2.297645, -1.131974, -1.859140, -1.537945, -1.782488, 1.545146, -2.112658),
lat = c(53.553464, 53.794762, 53.789720, 53.592658, 53.524176, 53.723237,53.996504, 53.646861, 53.796904, 53.540754),
buffer = c("Y", "N", "Y", "Y", "Y", "N", "Y", "N", "N", "Y")
)
# Convert the dataframe to an sf object, assuming WGS 84 (EPSG: 4326) coordinate reference system
towns_manual_WYCA <- st_as_sf(towns_manual_WYCA, coords = c("lon", "lat"), crs = 4326)
# Label LSOAs within town boundaries
towns_with_buffer <- towns_within_WYCA_buffer %>% st_buffer(dist=25)
lsoa_with_town_info <- st_join(lsoa_boundaries_within_WYCA, towns_with_buffer, join = st_within)
#create townsuburb variable
lsoa_with_town_info$townsuburb <- ifelse(is.na(lsoa_with_town_info$TCITY15NM), "Suburb", "Urban")
# populate rest of TCITY15NM with suburb if no city assigned
lsoa_with_town_info$TCITY15NM <- ifelse(is.na(lsoa_with_town_info$TCITY15NM), "Suburb", lsoa_with_town_info$TCITY15NM)
# simplify dataframe
lsoa_with_town_info_min <- lsoa_with_town_info %>%  select(LSOA21CD,
LSOA21NM,
geometry,
LSOA_area_km2,
townsuburb,
TCITY15NM,
geometry) %>%
as.data.frame() %>%
distinct(LSOA21CD, .keep_all=TRUE)
# Liverpool City Centre - LOCATION not super-important as not used for any calculation. Arbitrary city centre point
WYCA_CC <-
data.frame(id = "WYCA_CC", lat = 53.407438, lon = -2.981652) %>%
st_as_sf(coords = c("lon", "lat"), crs = 4326)
# simplify dataframe
lsoa_with_town_info_min <- lsoa_with_town_info %>%  select(LSOA21CD,
LSOA21NM,
geometry,
LSOA_area_km2,
townsuburb,
TCITY15NM,
geometry) %>%
as.data.frame() %>%
distinct(LSOA21CD, .keep_all=TRUE)
# Liverpool City Centre - LOCATION not super-important as not used for any calculation. Arbitrary city centre point
Leeds_CC <-
data.frame(id = "Leeds_CC", lat = 53.796904, lon = -1.545146) %>%
st_as_sf(coords = c("lon", "lat"), crs = 4326)
Leeds_CC_point <-
geom_sf(data = Leeds_CC, shape = 21, fill = 'white', size = 2)
mapview(Leeds_CC)
# Employed Residents
Employment <-read_csv("../../Data/census2021-ts066-lsoa.csv") %>%
dplyr::select("geography",
"geography code",
"Economic activity status: Economically active (excluding full-time students)") %>%
rename("LSOA_name" = "geography",
"id" = "geography code",
"Economically_active" = "Economic activity status: Economically active (excluding full-time students)")
# 4. R5R Network Setup -------------------------------------------------------
# Get input files - will load BODS_MANCH and BODS_WYCA - consider simplifying if
# too slow.
input_files <- list.files("../../Data/r5r_data",
recursive = TRUE,
pattern = 'gtfs\\.zip$|pbf$',
full.names = TRUE)
# List input files
input_files
# Read multi-modal network
gc() #this setup step requires quite a bit of memory, so best to gc first
